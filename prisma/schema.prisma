generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Grade {
  // studentClassGradeId	
  id             String @id @default(uuid())
  systemId       String
  gradeId        String @unique
  teacherName    String
  // Semester
  academicYear   String
  termId         String
  semester       Int
  displayName    String
  // primaryNidNumber	
  registerNumber String
  classCode      String
  className      String
  classGrade     String
  // gradeId	
  grade          String
  point          Int
  status         String

  @@map("grade")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  systemId       String
  registerNumber String
  role           Role
  accounts       Account[]
  sessions       Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email         String?
  emailVerified Boolean?
  image         String?
  username      String?
  banned        Boolean?
  banReason     String?
  banExpires    DateTime?

  @@unique([username])
  @@map("user")
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Account {
  id         String @id
  accountId  String
  providerId String
  userId     String

  accessToken  String?
  idToken      String?
  refreshToken String?

  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?

  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  scope    String?
  password String?

  createdAt DateTime
  updatedAt DateTime

  @@map("account")
}

model Session {
  id     String @id
  userId String

  token          String
  ipAddress      String?
  userAgent      String?
  impersonatedBy String?

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime
  updatedAt DateTime

  @@unique([token])
  @@map("session")
}
